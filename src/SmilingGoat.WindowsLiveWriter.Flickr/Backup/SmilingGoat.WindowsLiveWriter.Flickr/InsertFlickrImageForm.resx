<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>114, 17</value>
  </metadata>
  <metadata name="toolTip2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>230, 17</value>
  </metadata>
  <metadata name="imageListing.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>327, 17</value>
  </metadata>
  <metadata name="tipUser.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>536, 17</value>
  </metadata>
  <metadata name="imageProcessor.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>626, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP769gH++vYC/vr2AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/vr2A/769gb++vYEgIB/AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPv2/wH48P8I7Nf/IsB9/zeeN/9LmjD/UpEc/1OUI/9MpUb/O8iO
        /yfUp/8N+/b/Au+2iAHvtogc7bB+NuqhZk3yxaBb8cGaZPHCm2HebA5W5YxERumeYSj32sMQ99rDAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+/b/BPTp/xXVqf9Vt2z/i543/7uVJv/NkyD/0Jsx
        /7+wXf+VzJX/YevV/yH79v8H77aIBO+2iEfrp3CH44M1wuB2H97ebBDu3m8T6990G9PljESv77mOZPfa
        wyr32sMHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9er/AvXq/wnhwf87xYj/dq5X/6edNf/JkRv/44wS
        /+yLEP/ukBn/5Zsw/8+pTv6wwX7+gNij3GnqoWli55RRmeOEN8ffcRfn3WgI9txjAP7cZAL83msO8OB3
        It3mkEq07Kt2gPPJqDzyxqIXAAAAAAAAAAAAAAAAAAAAAAAAAADz5/8H8OH/G8SF/3mWJf/ZiQr/9IQA
        //+EAP//hAD//4QA//+EAP//hAD//4YF/vmUIfvftU+2zuSKRcPfcRro3GMA/9xjAP/cYwD/3GMA/9xj
        AP/cYwD/3GMA/9xkAf3heyjW7rSFefHEnzT77OABAAAAAAAAAAAAAAAAAAAAAOnR/x3LlP9oqEz/sosP
        /++GBP/6hAD//4QA//+EAP//hAD//4QA//+EAP//hgP6/JMX4vKzPpHr33Ib591oCvbcYwD/3GMA/9xj
        AP/cYwD/3GMA/9xjAP/cYwD/3GMA/t5tEe3jhjrE7rSFaPvs4BD77OAEAAAAAAAAAADs1/8EsFz/NaRD
        /6qTH//ghAD//4QA//+EAP//hAD//4QA//+EAP//hAD//4QA//+HBPP/mhm8/7c6aP/cYwD/3GMA/9xj
        AP/cYwD/3GMA/9xjAP/cYwD/3GMA/9xjAP/cYwD/3GQB/dxmBvjqpGqU+OLQKvrp2wwAAAAAAAAAAOzX
        /xLHjP9Rlyf/0ogJ//WEAP//hAD//4QA//+EAP//hAD//4QA//+EAP//hAD//4sI6f+vMH//yE01/9xj
        AP/cYwD/3GMA/9xjAP/cYwD/3GMA/9xjAP/cYwD/3GMA/9xjAP/cYwD+3GQB/eaSTbHyxaFa+ODOGQAA
        AAAAAAAA5sz/I8uU/2qPGP/mhAD//4QA//+EAP//hAD//4QA//+EAP//hAD//4QA//+EAP7/jQri/7w/
        WP/UWhX/3GMA/9xjAP/cYwD/3GMA/9xjAP/cYwD/3GMA/9xjAP/cYwD/3GMA/9xjAP/cYwD/44U4xuyp
        c3vtrnwjAAAAAAAAAADduf82wH3/gY4U/+qEAP//hAD//4QA//+EAP//hAD//4QA//+EAP//hAD//4QA
        /v+ODN7/xEhD/9phA//cYwD/3GMA/9xjAP/cYwD/3GMA/9xjAP/cYwD/3GMA/9xjAP/cYwD/3GMA/9xj
        AP/hfSvT6Jtck+yqdSoAAAAAAAAAANKh/zq+eP+GjRT/6oQA//+EAP//hAD//4QA//+EAP//hAD//4QA
        //+EAP//hAD+/44M3f/FST//22IA/9xjAP/cYwD/3GMA/9xjAP/cYwD/3GMA/9xjAP/cYwD/3GMA/9xj
        AP/cYwD/3GMA/+F9KtTnllSV55VRKgAAAAAAAAAA0qH/Or54/4aNFP/qhAD//4QA//+EAP//hAD//4QA
        //+EAP//hAD//4QA//+EAP7/jgze/8VJQP/bYgD/3GMA/9xjAP/cYwD/3GMA/9xjAP/cYwD/3GMA/9xj
        AP/cYwD/3GMA/9xjAP/cYwD/4n4s0uiaWZHomlkpAAAAAAAAAADbs/8nyY//b48X/+eEAP//hAD//4QA
        //+EAP//hAD//4QA//+EAP//hAD//4QA/v+MCeX/uDpl/9BWH//cYwD/3GMA/9xjAP/cYwD/3GMA/9xj
        AP/cYwD/3GMA/9xjAP/cYwD/3GMA/9xjAP/kiT7A7Kx4cumfYSAAAAAAAAAAAOzX/xXTo/9XlSP/24YE
        //qEAP//hAD//4QA//+EAP//hAD//4QA//+EAP//hAD//4oH7P+qKpD/xEhD/9tiAP/bYgD/3GMA/9xj
        AP/cYwD/3GMA/9xjAP/cYwD/3GMA/9xjAP/cYwH93GUD++eWU6vyxqJP8cGaFgAAAAAAAAAA7Nf/B9iu
        /zynSf+ykBr/5IQA//+EAP//hAD//4QA//+EAP//hAD//4QA//+EAP//hgP2/5UTy/+zNXX/22IA/9ti
        AP/cYwD/3GMA/9xjAP/cYwD/3GMA/9xjAP/cYwD/3GMA/9xmBfnfbxTq7Kx3h/jizyLzyacJAAAAAAAA
        AAAAAAAArVb/Irlv/3qiP/+/iAr/9IUC//yEAP//hAD//4QA//+EAP//hAD//4QA//+FAvz9jA3x9q03
        ouvedSbf3WoO8txjAP7cYwD+3GMA/9xjAP/cYwD/3GMA/9xjAP/cZgX633IZ5eWNRbnutodb/vn1Bv75
        9QEAAAAAAAAAAAAAAAC4bP8M37z/LL54/4aTIP/eiAn/9YQA//+EAP//hAD//4QA//+EAP//hAD//4YE
        /vqSHfvitVXKwOeiepfgey/W3GQB/dxjAP7cYwD/3GMA/9xjAP/cYwD/3GMA/95tEO7kikC+8cSgXu2w
        fib++fUBAAAAAAAAAAAAAAAAAAAAAPXq/wP16v8L2bH/Sbpw/46lRP+6lyf/140U/+qKDf/xiQz/8o0T
        /+uVJP/boDz/wrVn/5fDe+Zx6rGWT+ifaorljka44n8u0OB3Id3fchnl33Qc4uF6JtjjhDbJ6JpZpeys
        d3LvuYwo+eXVDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPXq/wH06f8L7tz/Is6a/2SzY/+bnDP/y5Qi
        /92SH//gmjD/zq9a/6XIjf9x6M//L9Sm/BDqsZYH8suzJ/PNrlDrqXSK55ZUquSKQL7ljka46Z5gnu61
        h3j22sI89NO3E+SMQgX55dUBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPv2/wL37/8L583/Lb55
        /0qeN/9kmS3/bZEd/2+WJv9lqEv/T8mP/zTZsf8S+/b/AgAAAAD549IO99vFIvLIp0HpoGVS5YxEXOWO
        R1nomlpM8LuQN/TOrhj9+PMEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////////////H////w//AA
        AA/wAAAPwAAAB8AAAAPAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABwAAAAcAA
        AAPAAAAH4AAAB/AAgB//////////////////////////////////////KAAAABAAAAAgAAAAAQAgAAAA
        AABABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANZyUgPff0ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyZD/CM6a/06aMf+JlCT/i7px
        /1bLgscN1YCEGumeYnPomlqi44Q1neibXWDsrXkQAAAAAAAAAAAAAAAAyY//C8B8/4CWJf/YiQv/84gK
        //STIP7duGTipeWMRqnebhPr3GQC/NxlBPrfcxvj66hygumiZxMAAAAAo0D/AcKB/1mSHv/ghAH//YQA
        //+EAP//hQH6/qUqpfbdaAn23GMA/9xjAP/cYwD/3GMA/t5vFOnyyadN6JtcBMaJ/w2uV/+chQL//IQA
        //+EAP//hAD//4gE8v/BRUj/3GMA/9xjAP/cYwD/3GMA/9xjAP/cYwD+6aFmk+qlbA+9d/8cpkf/toQA
        //+EAP//hAD//4QA//+JBu3/z1Uh/9xjAP/cYwD/3GMA/9xjAP/cYwD/3GMA/+SKQbPmkUwVvXb/GKhM
        /7GEAP//hAD//4QA//+EAP//iAXv/8pOMf/cYwD/3GMA/9xjAP/cYwD/3GMA/9xjAP/mk06l5ZBKErRk
        /we5b/+Ihwf/94QA//+EAP//hAD//4YC+P+tLoT/22IA/9xjAP/cYwD/3GMA/9xjAP/cZwf277qOaOql
        bAcAAAAAv3v/NZ44/8WFAv/7hAD//4QA//+EAf79oC3W4OB/N8/cYwD93GMA/9xjAP/cZgX55pNPrueY
        VyIAAAAAAAAAALNj/wPduf9Br1r/pJEd/+CQG//iq1H/rM2V+FHfmY1B6aBlmOKCM8rjhjrE66t2iOyt
        eSznmVgDAAAAAAAAAAAAAAAAs2L+A7dr/R2eNfc0nTDrNbNX3iC+YbUFzHSXA9+ZkBjeg1Qr4olIKeqk
        ahPigTMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAA//8AAP/PAADAAwAAgAEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgAEAAIABAADAAwAA//8AAP//AAD//wAA
</value>
  </data>
</root>